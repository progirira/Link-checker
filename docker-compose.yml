services:
  scrapper:
    build:
      context: .
      dockerfile: cmd/scrapper/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/scrapper?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
#      liquibase:
#        condition: service_completed_successfully
      bot:
        condition: service_started
    networks:
      - backend

  bot:
    build:
      context: .
      dockerfile: cmd/bot/Dockerfile
    ports:
      - "8090:8090"
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_INITDB_ARGS: --auth-host=password
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: scrapper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5
#  liquibase:
#    image: liquibase/liquibase
#    container_name: liquibase
#    depends_on:
#      - postgres
#    working_dir: /liquibase/changelog
#    command: [
#      "--changeLogFile=master.yaml",
#      "--url=jdbc:postgresql://postgres:5432/scrapper",
#      "--username=postgres",
#      "--password=postgres",
#      "update"
#    ]
#    volumes:
#      - ./migrations:/liquibase/changelog
#    networks:
#      - backend
volumes:
  postgres_data:
networks:
  backend:
    driver: bridge